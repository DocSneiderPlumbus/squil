@using System.Diagnostics
@using Squil.Shared.IndexFields

@{
    var columns = Index.Columns.Skip(HiddenPrefixLength).ToArray();
}

<fieldset class="index mb-1">
    @*                                    <label>@index.Name</label>
    *@
    <div class="index-columns d-flex">
        @for (var i = 0; i < columns.Length; ++i)
        {
            var c = columns[i];

            <IndexTextField Name="@c.c.Name" Focus="@(i == 0)" IsActive="@IsActive" @bind-Value="@SearchValues[c.c.Name]" />
        }
    </div>
</fieldset>

@code {
    [CascadingParameter]
    public QueryContext Context { get; set; }

    [Parameter]
    public CMIndexlike Index { get; set; }

    [Parameter]
    public Boolean IsActive { get; set; }

    [Parameter]
    public Int32 HiddenPrefixLength { get; set; }

    [Parameter]
    public IMap<String, String> SearchValues { get; set; }
}
