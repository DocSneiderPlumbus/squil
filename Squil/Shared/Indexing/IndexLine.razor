@using System.Diagnostics
@using Squil.Shared.Indexing.Fields

@{
    var columns = Index.Index.Columns.Skip(HiddenPrefixLength).ToArray();
    var validation = Index.ValidatedValues?.Skip(HiddenPrefixLength).ToArray();
}

<fieldset class="index">
    <div class="index-columns d-flex">
        @for (var i = 0; i < columns.Length; ++i)
        {
            var c = columns[i];
            var isOk = validation?[i].IsOk ?? true;

            var first = i == 0;

            <IndexTextField Name="@c.c.Name" HasIssue="@(!isOk)" Focus="@first" IsActive="@Index.IsCurrent" @bind-Value="@SearchValues[c.c.Name]" />
        }
    </div>
</fieldset>

@code {
    [CascadingParameter]
    public QueryContext Context { get; set; }

    [Parameter]
    public IndexVm Index { get; set; }

    [Parameter]
    public Int32 HiddenPrefixLength { get; set; }

    [Parameter]
    public IMap<String, String> SearchValues { get; set; }
}
