@using System.Diagnostics

<div class="@ClassNames("search-panel", "show".If(showSearchOptions))">
    <button type="button" class="close search-panel-close-button" @onclick="@HideSearchOptions" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>

    <div class="indexes-form">
        <h5 class="text-muted font-weight-bold border-bottom mb-4">Search</h5>

        @if (Vm.Indexes.Length > 0)
        {
            foreach (var index in Vm.Indexes)
            {
                if (!index.Index.IsSupported) continue;

                <IndexLine Vm="@Vm" Index="@index" HiddenPrefixLength="@Vm.KeyValuesCount" SearchValues="@SearchValues" ShowSearchOptions="@ShowSearchOptions" />
            }
        }
        else
        {
            <p class="text-muted">There are no suitable indexes to search by.</p>
        }
    </div>

    <div class="text-muted">
        <UnsupportedIndexesPanel Indexes="@Vm.UnsuitableIndexes" />
    </div>
</div>

@code {
    Boolean showSearchOptions;

    Action ShowSearchOptions => () => showSearchOptions = true;
    Action HideSearchOptions => () => showSearchOptions = false;

    [CascadingParameter]
    public QueryContext QueryContext { get; set; }

    [Parameter]
    public LocationQueryVm Vm { get; set; }

    [Parameter]
    public IMap<String, String> SearchValues { get; set; }
}
