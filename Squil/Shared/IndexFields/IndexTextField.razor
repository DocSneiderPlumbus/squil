
<span class="index-column index-column-text d-flex flex-column border">

    <input @ref="element" class="index-column-value outline-none" value="@Value" @oninput="HandleChange" />

    <span class="index-column-name" type="text">@Name</span>

</span>

@code {
    [Parameter]
    public String Name { get; set; }

    [Parameter]
    public Boolean IsActive { get; set; }

    [Parameter]
    public String Value { get; set; }

    [Parameter]
    public Boolean Focus { get; set; }

    [Parameter]
    public EventCallback<String> ValueChanged { get; set; }

    ElementReference element;

    Boolean wasActive;

    public ValueTask FocusAsync() => element.FocusAsync();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!wasActive && IsActive)
        {
            await FocusAsync();
        }

        wasActive = IsActive;
    }

    async Task HandleChange(ChangeEventArgs e)
    {
        var givenValue = (String)e.Value;

        var newValue = givenValue == "" ? null : givenValue;

        await ValueChanged.InvokeAsync(newValue);
    }
}
