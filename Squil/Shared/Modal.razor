@inject IJSRuntime Js

<div @ref="ModalReference" class="blazor-modal modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="w-100">
                    <div class="d-flex w-100">
                        <h5>@Title</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    @HeaderExtra
                </div>
            </div>
            <div class="modal-body">
                @Body
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment Title { get; set; }

    [Parameter]
    public RenderFragment HeaderExtra { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    // Not yet ever called, but setting this each does lead to opening the modal.
    // Should really be called on the appropriate dom event.
    [Parameter]
    public Action OnClose { get; set; }


    ElementReference ModalReference { get; set; }

    Boolean hadFirstRender;

    protected override async Task OnParametersSetAsync()
    {
        if (!hadFirstRender) return;

        await Js.InvokeVoidAsync("openBoostrapModal", ModalReference, OnClose != null);
    }

    protected override void OnAfterRender(bool firstRender) => hadFirstRender = true;
}
