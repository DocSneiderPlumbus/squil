@page "/info/{connectionName}"

@inject ConnectionManager Connections

@{
    var connection = Connections.GetContext(ConnectionName);

    var cm = connection.CircularModel;

    var tables = cm.RootTable.Relations.Values.Select(r => r.Table).ToArray();

    var tableWithOverlappingIndexes = (
        from t in tables
        let columns = (
            from i in t.Indexes.Values
            where i.IsSupported
            from c in i.Columns
            group (i, c) by c.c.Name into g
            where g.Count() > 1
            select g.Key
        ).FirstOrDefault()
        where columns != null
        select t
    ).FirstOrDefault();

    var indexes = cm.GetAllIndexes().ToArray();

    var dateIndexes = indexes.Where(i => i.Columns.Any(c => c.c.Type is DateOrTimeColumnType)).ToArray();

}

@if (tableWithOverlappingIndexes != null)
{
    <div>
        Table with overlapping indexes: @tableWithOverlappingIndexes.Name.Simple
    </div>
}

<div>
    <label>Date/time-featureing indexes:</label>

    @String.Join(", ", dateIndexes.Select(i => i.Name));
</div>

@code {
    [Parameter]
    public String ConnectionName { get; set; }
}
