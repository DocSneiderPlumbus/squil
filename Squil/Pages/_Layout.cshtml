@using Microsoft.AspNetCore.Components.Web
@using Microsoft.Extensions.Options
@namespace Squil.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IOptions<AppSettings> Settings

@{
    var sp = "_content/Squil.Razor";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />

    <link rel="stylesheet" href="@sp/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="@sp/css/site.css" />

    <link rel="stylesheet" href="@sp/css/entity.css" />
    <link rel="stylesheet" href="@sp/css/indexes.css" />

    <script src="@sp/lib/jquery/dist/jquery.min.js"></script>
    <script src="@sp/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <link href="@sp/fontawesome/css/fontawesome.css" rel="stylesheet">
    <link href="@sp/fontawesome/css/all.min.css" rel="stylesheet">
    <link href="@sp/fontawesome/css/solid.min.css" rel="stylesheet">

    <link href="~/Squil.styles.css" rel="stylesheet" />

    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        An unhandled exception has occurred. This application may no longer respond until reloaded.
        You can look for an exception message in the browser dev tools or simply reloading will also
        show you one if the exception happened on page initialization.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    @if (!String.IsNullOrEmpty(Settings.Value.GoogleAnalyticsToken))
    {
        <script src="_content/Blazor-Analytics/blazor-analytics.js"></script>
    }

    <script src="@sp/js/site.js"></script>
</body>
</html>
