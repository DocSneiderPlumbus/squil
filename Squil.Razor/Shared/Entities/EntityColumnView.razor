<div class="@ClassNames("entity-column", "entity-column-editing".If(isEditing))" data-x-name="@Column.Name" data-css-type="@Column.Type.CssType" data-string-length-class="@Cls.GetCssClass()" data-is-focus-column=@IsFocusColumn>
    <label>
        <a href="@Url">
            @Column.Name
@*          Doesn't work - the hovering is blocked by the outer style change on hover  
            @if (Column.Comment != null)
            {
                <span data-toggle="tooltip" title="@Column.Comment">
                    &nbsp;
                    <span class="fa fa-xs fa-info" />
                </span>
            }
*@        </a>
    </label>
    <div class="entity-column-content">
        <span>
            @{
                var value = Entity.GetDisplayValue(Column.Name);

                if (value == null)
                {
                    <span class="null-value" />
                }
                else if (value.Length == 0)
                {
                    <span class="empty-value" />
                }
                else if (String.IsNullOrWhiteSpace(value))
                {
                    <span class="ws-value" />
                }
                else if (IsFocusColumn)
                {
                    <CopyableContent>@value</CopyableContent>
                }
                else
                {
                    <EditableSpan Value="@value" Focused="@HandledFocused" ValueChanged="@HandleValueChanged" IsEditable="@CanEdit" />
                }
            }
        </span>
    </div>
</div>

@code {
    [Parameter]
    public Entity Entity { get; set; }

    [Parameter]
    public CMTable Table { get; set; }

    [Parameter]
    public String Url { get; set; }

    [Parameter]
    public CMColumn Column { get; set; }

    [Parameter]
    public StringLengthClass Cls { get; set; }

    [Parameter]
    public Boolean IsFocusColumn { get; set; }

    [CascadingParameter]
    public LocationQueryVm QueryVm { get; set; }

    Boolean CanEdit => QueryVm.AreEditing;

    Boolean isEditing;

    void HandleValueChanged(String value)
    {
        isEditing = false;

        Entity.SetEditValue(Column.Name, value);

        QueryVm.AddChange(Entity);
    }

    void HandledFocused()
    {
        isEditing = true;
    }
}
