@using System.Diagnostics
@inject IJSRuntime Js

<div @ref="ModalReference" @onhiddenbsmodal="HandleClose" class="blazor-modal modal" tabindex="-1" role="dialog">
    @if (OnClose != null)
    {
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="w-100">
                        <div class="d-flex w-100">
                            <h5>@Title</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        @HeaderExtra
                    </div>
                </div>
                <div class="modal-body">
                    @Body
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public RenderFragment Title { get; set; }

    [Parameter]
    public RenderFragment HeaderExtra { get; set; }

    [Parameter]
    public RenderFragment Body { get; set; }

    [Parameter]
    public Action OnClose { get; set; }

    ElementReference ModalReference { get; set; }

    Boolean isOpen;
    Boolean isChangePending;

    void HandleClose(HiddenBsModalEventArgs a)
    {
        OnClose?.Invoke();
    }

    protected override void OnParametersSet()
    {
        var shouldBeOpen = OnClose != null;

        if (shouldBeOpen != isOpen)
        {
            isChangePending = true;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Bootstrap's modal events don't bubble and Blazor can handle only those that do,
            // so we need to translate the event.
            await Js.InvokeVoidAsync("translateEvent", ModalReference, "hidden.bs.modal", "hiddenbsmodal");
        }

        if (isChangePending)
        {
            isChangePending = false;

            await Js.InvokeVoidAsync("callBoostrapModal", ModalReference, isOpen = OnClose != null);
        }
    }
}
