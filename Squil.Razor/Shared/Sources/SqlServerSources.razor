@inject LiveConfiguration configuration

@{
    var hosts = configuration.GetLiveSqlServerHosts();
}

<button class="btn btn-outline-dark btn-sm position-absolute end-0 top-0" @onclick="AddHost">
    <i class="far fa-plus-circle me-2" />Add host
</button>

<div class="list-group">
    @foreach (var host in hosts)
    {
        var h = host;

        <SqlServerHost @key="host.Id" Host="host" OnEdit="EditHost" />
    }
</div>

<ServerModal OnClose="@editModalSubscription">
    <Title>@EditModalTitleVerb host connection</Title>
    <Body>
        <EditSqlServerHost Model="@editedHostConfiguration" OnSubmit="@SaveHost" />
    </Body>
</ServerModal>

<RerenderHelper Observable="configuration.ObservableSqlServerHosts" OnChange="StateHasChanged" />

@code {
    SqlServerHostConfiguration editedHostConfiguration;

    Action editModalSubscription;

    Boolean IsAdding => editedHostConfiguration?.Id == Guid.Empty;

    String EditModalTitleVerb => IsAdding ? "Add" : "Edit";

    void AddHost()
    {
        EditHost(configuration.CreateLiveServerHost());
    }

    void EditHost(LiveSqlServerHost host)
    {
        editedHostConfiguration = host.Configuration;
        editModalSubscription = () => { editModalSubscription = null; editedHostConfiguration = null; StateHasChanged(); };
        StateHasChanged();
    }

    void SaveHost(SqlServerHostConfiguration hostConfiguration)
    {
        configuration.AddOrUpdateSqlServerHost(hostConfiguration);
        editModalSubscription = null; editedHostConfiguration = null;
        StateHasChanged();
    }
}
