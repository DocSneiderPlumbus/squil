variables:
  branchname: $(Build.SourceBranchName)

  build-windows: ${{ parameters['build-windows'] }}
  release-web: ${{ parameters['release-web'] }}

parameters:
- name: build-windows
  displayName: Build Windows
  type: boolean
  default: false
- name: release-web
  displayName: Release Web
  type: boolean
  default: true

trigger:
- dev
- release

pool:
  vmImage: ubuntu-latest

stages:

- stage: BuildWeb
  jobs:
  - job: build
    steps:
    - task: PowerShell@2
      displayName: Get base version (PS)
      inputs:
        filePath: 'retrieve-base-versions.ps1'
        showWarnings: true
        workingDirectory: '$(Build.SourcesDirectory)'
    - task: PowerShell@2
      displayName: Set derived versions (PS)
      env:
        SQUILREVISION: $[counter(variables['base-version-with-branch'], 0)]
      inputs:
        filePath: 'version.ps1'
        showWarnings: true
        workingDirectory: '$(Build.SourcesDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)'
        artifact: 'sources'
        publishLocation: 'pipeline'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '**/Squil.Web.csproj'
        arguments: '-o web-package'
        publishWebProjects: false
        zipAfterPublish: false
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'web-package'
        artifact: 'web'
        publishLocation: 'pipeline'

- stage: ReleaseWeb
  dependsOn: BuildWeb
  condition: and(eq(variables['Build.SourceBranchName'], 'release'), eq(variables['release-web'], 'True'))
  jobs:
  - job: Docker
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'web'
        targetPath: '$(Build.SourcesDirectory)'
    - task: Docker@2
      displayName: buildAndPush
      inputs:
        containerRegistry: 'Squil Docker Hub'
        repository: squiltech/squil
        tags: $(squildockertags)
  - job: Demo
    steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'web'
        targetPath: '$(Build.BinariesDirectory)'
    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy Azure App Service'
      inputs:
        azureSubscription: '$(WebDemoSubscriptionName)'
        appType: 'webAppLinux'
        WebAppName: 'squil'
        packageForLinux: '$(Build.BinariesDirectory)/Squil.Web'

- stage: BuildMauiWindows
  condition: eq(variables['build-windows'], true)
  pool:
    vmImage: windows-latest
  jobs:
  - job: build
    steps:
      - checkout: none
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'sources'
          targetPath: 'sources'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/Squil.Maui.csproj'
          arguments: '-f net6.0-windows10.0.19041.0'
          zipAfterPublish: false
          modifyOutputPath: false
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Agent.BuildDirectory)'
          Contents: '**/Squil.Maui*.msix'
          TargetFolder: 'maui-windows-package'
          flattenFolders: true
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'maui-windows-package'
          artifact: 'maui-windows-msix'
          publishLocation: 'pipeline'
